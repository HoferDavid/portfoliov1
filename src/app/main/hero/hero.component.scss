@use "./../../../app/shared/scss/templates/" as *;

section {
  height: calc(100dvh - var(--headerHeight));
  @include dFlex($jc: space-evenly, $fd: column);

  @media screen and (max-width: 992px) and (orientation: landscape) {
    margin-bottom: 12rem;
  }
}

.atf {
  @include dFlex($fd: column);

  h1 {
    display: flex;
    align-items: center;
    text-align: center;
    @include header();
  }
}

.nameContainer {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8%;
  padding: 0 4%;
  @include subheaderName();

  .stroke {
    height: 2px;
    background-color: $primary;
    flex-grow: 1;

    @media (max-width: 425px) {
      display: none;
    }
  }
}

button {
  @include button();
}

.cta {
  width: 100%;
  @include dFlex($jc: space-between);
}

a {
  @include sectionText();
  transform: rotate(180deg);
  writing-mode: vertical-rl;
  color: $highlight;
  display: inline-block;
  position: relative;
  transition: 0.2s;

  &:hover {
    color: $highlight;
  }

  &:after {
    content: "";
    writing-mode: vertical-rl;
    position: absolute;
    width: 2px;
    transform: scaleY(0);
    height: 100%;
    bottom: 0;
    left: 0;
    background-color: $highlight;
    transform-origin: top left;
    transition: transform 0.25s ease-out;
  }

  &:hover::after {
    transform: scaleY(1);
    transform-origin: bottom left;
  }
}

.scrolldownContainer {
  @include dFlex($fd: column, $gap: 8px);
  cursor: pointer;

  .arrowContainer {
    overflow: hidden;
    height: 120px;

    img {
      height: 120px;
      animation: scrollArrow 2.5s infinite;
    }
  }

  .arrowText {
    @include sectionText();
    display: flex;
    flex-direction: column;
    text-align: center;
  }
}

@keyframes scrollArrow {
  0% {
    transform: translateY(-100%);
  }
  25% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(100%);
  }
}

.rotate span {
  display: inline-flex;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

.rotate span:nth-of-type(1) {
  animation: rotate 2s ease-in-out 0.1s forwards;
}
.rotate span:nth-of-type(2) {
  animation: rotate 2s ease-in-out 0.2s forwards;
}
.rotate span:nth-of-type(3) {
  animation: rotate 2s ease-in-out 0.3s forwards;
}
.rotate span:nth-of-type(4) {
  animation: rotate 2s ease-in-out 0.4s forwards;
}
.rotate span:nth-of-type(5) {
  animation: rotate 2s ease-in-out 0.5s forwards;
}
.rotate span:nth-of-type(6) {
  animation: rotate 2s ease-in-out 0.6s forwards;
}
.rotate span:nth-of-type(7) {
  animation: rotate 2s ease-in-out 0.7s forwards;
}
.rotate span:nth-of-type(8) {
  animation: rotate 2s ease-in-out 0.8s forwards;
}
.rotate span:nth-of-type(9) {
  animation: rotate 2s ease-in-out 0.9s forwards;
}
.rotate span:nth-of-type(10) {
  animation: rotate 2s ease-in-out 1s forwards;
}
.rotate span:nth-of-type(11) {
  animation: rotate 2s ease-in-out 1.1s forwards;
}

@keyframes rotate {
  0%,
  75% {
    transform: rotateY(360deg);
  }
}
